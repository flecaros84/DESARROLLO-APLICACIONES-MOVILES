fun main() {
    //Try catch

    println("ü™ô Bienvenido a PuertoGames M√≥vil")
    println("Ingrese monto a recargar:")

    try {
        // Leemos input del usuario (puede ser null)
        val entrada = readLine()
        /*Se detecta un valor no v√°lido (como un n√∫mero negativo).
        Hay una condici√≥n l√≥gica que no tiene sentido seguir ejecutando.
        Quieres avisar al programador o usuario que algo se rompi√≥ y por qu√©.*/

        // Convertimos a Int o lanzamos excepci√≥n
        val monto = entrada?.toInt() ?: throw Exception("Entrada vac√≠a")


        /*
        IllegalArgumentException
        * En espa√±ol significa: Excepci√≥n de argumento ilegal.
        Es un tipo de error (excepci√≥n) que aparece en Java/Kotlin cuando un m√©todo o funci√≥n recibe un argumento no v√°lido.

        * */

        if (monto <= 0) {
            //throw es lanzar= le decimos
            throw IllegalArgumentException("El monto debe ser mayor a 0") // Validamos l√≥gica
        }
        println("‚úÖ Recarga exitosa de $$monto CLP")


        // Si ingres√≥ letras u otro formato inv√°lido
    } catch (e: NumberFormatException) {
        println("‚ùå Error: Debes ingresar un n√∫mero v√°lido")

        // Si el monto es negativo o 0
    } catch (e: IllegalArgumentException) {
        println("‚ö†Ô∏è Error l√≥gico: ${e.message}")

        // Cubre cualquier otro error no anticipado
    } catch (e: Exception) {
        println("üö® Error inesperado: ${e.message}")


        // Siempre se ejecuta, haya o no error
    } finally {
        println("üßæ Gracias por usar PuertoGames M√≥vil")
    }
}